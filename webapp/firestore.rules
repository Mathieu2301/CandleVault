service cloud.firestore {
  function same(key) {
    return request.resource.data[key] == resource.data[key];
  }

  function check(inputs) {
    return (
      request.resource.data.keys().hasOnly(inputs)
      && request.resource.data.keys().hasAll(inputs)
    );
  }

    
  match /databases/{database}/documents/candlevault_trades/{tradeID} {
    allow read: if resource.data.user == request.auth.uid;

    allow update: if (
      resource.data.user == request.auth.uid
      && request.resource.data.keys().hasAll([
        'SL', 'TP', 'lever', 'market', 'openDate',
        'openVal', 'state', 'user', 'value',
      ])
      && same('lever') && same('value')
      && same('market') && same('openVal')
      && resource.data.state == 'OPEN'
      && request.resource.data.state == 'WAITFORCLOSE'
    );

    function userMoney(user) {
      return get(/databases/$(database)/documents/candlevault_users/$(user)).data.money;
    }
    
    allow create: if (
      request.resource.data.user == request.auth.uid
      && request.resource.data.market != null
      && (request.resource.data.lever >= 1 || request.resource.data.lever <= -1)
      && request.resource.data.lever <= 30
      && request.resource.data.value >= 0.01
      && request.resource.data.value < userMoney(request.auth.uid)
      && request.resource.data.TP >= 0.01
      && request.resource.data.SL >= 0.01
      && request.resource.data.state == 'WAITFOROPEN'
    );
    
    allow delete: if (
      resource.data.user == request.auth.uid
      && (
        resource.data.state == 'WAITFOROPEN'
        || resource.data.state == 'CLOSED'
      )
    );
  }
  
  match /databases/{database}/documents/candlevault_users/{userID} {
    allow get: if userID == request.auth.uid;
    
    allow create: if (
      userID == request.auth.uid
      && check(['money', 'markets'])
      && request.resource.data.money == 0
    );

    allow update: if (
      userID == request.auth.uid
      && check(['money', 'markets'])
      && same('money')
    );
    
    match /pushTokens/{pushToken} {
      allow get, create: if userID == request.auth.uid;
    }
  }

  match /databases/{database}/documents/candlevault_transactions/{transactionID} {
    allow read: if (
      resource.data.from == request.auth.uid
      || resource.data.to == request.auth.uid
    );

    function userMoney(user) {
      return get(/databases/$(database)/documents/candlevault_users/$(user)).data.money;
    }

    allow create: if (
      check(['state', 'name', 'from', 'to', 'value'])
      && request.resource.data.state == 'WAITING'
      && request.resource.data.name != null
      && request.resource.data.from == request.auth.uid
      && request.resource.data.to != request.auth.uid
      && request.resource.data.value > 0
      && request.resource.data.value < userMoney(request.auth.uid)
      && exists(/databases/$(database)/documents/candlevault_users/$(request.resource.data.to))
    );
  }
}
